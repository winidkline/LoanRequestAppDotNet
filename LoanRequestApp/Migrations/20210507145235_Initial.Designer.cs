// <auto-generated />
using System;
using LoanRequestApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoanRequestApp.Migrations
{
    [DbContext(typeof(LoansDbContext))]
    [Migration("20210507145235_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LoanRequestApp.Models.LoanRequest", b =>
                {
                    b.Property<int>("LoanRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Approved")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasProcessed")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("P080APath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Requested")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Submitted")
                        .HasColumnType("datetime2");

                    b.Property<int>("TermUnit")
                        .HasColumnType("int");

                    b.Property<int>("TermValue")
                        .HasColumnType("int");

                    b.HasKey("LoanRequestId");

                    b.ToTable("LoanRequests");
                });

            modelBuilder.Entity("LoanRequestApp.Models.LoanRequestAsset", b =>
                {
                    b.Property<int>("LoanRequestAssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoanRequestAssetId");

                    b.HasIndex("LoanRequestId");

                    b.ToTable("LoanRequestAssets");
                });

            modelBuilder.Entity("LoanRequestApp.Models.LoanRequestAssetType", b =>
                {
                    b.Property<int>("LoanRequestAssetTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoanRequestAssetTypeId");

                    b.ToTable("LoanRequestAssetTypes");
                });

            modelBuilder.Entity("LoanRequestApp.Models.LoanRequestAsset", b =>
                {
                    b.HasOne("LoanRequestApp.Models.LoanRequest", null)
                        .WithMany("LoanRequestAssets")
                        .HasForeignKey("LoanRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
